# -*- coding: utf-8 -*-
"""Task3 classifier.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1D03uSfKCcBHEUT1-Ci6f87yJxbv3Q1Yf
"""

!pip install pandas scikit-learn matplotlib seaborn

import pandas as pd


# Step 2: Load the CSV file
df = pd.read_csv("bank-full[1].csv", sep=';')

df.head()

"""Preprocess the Data"""

from sklearn.preprocessing import LabelEncoder

# Encode all categorical columns
label_encoders = {}
for col in df.select_dtypes(include='object').columns:
    le = LabelEncoder()
    df[col] = le.fit_transform(df[col])
    label_encoders[col] = le

"""Train-Test Split & Build Model"""

from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import classification_report, confusion_matrix

# Split into features and target
X = df.drop('y', axis=1)
y = df['y']

# Train/test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# Build the decision tree classifier
clf = DecisionTreeClassifier(criterion="entropy", max_depth=5, random_state=42)
clf.fit(X_train, y_train)

# Predict on test set
y_pred = clf.predict(X_test)

# Evaluate
print("Confusion Matrix:\n", confusion_matrix(y_test, y_pred))
print("\nClassification Report:\n", classification_report(y_test, y_pred))

"""Visualize the Decision Tree"""

import matplotlib.pyplot as plt
from sklearn.tree import plot_tree

plt.figure(figsize=(20,10))
plot_tree(clf,
          feature_names=X.columns,
          class_names=label_encoders['y'].classes_,
          filled=True,
          rounded=True,
          fontsize=10)
plt.title("Decision Tree - Bank Marketing Dataset")
plt.show()